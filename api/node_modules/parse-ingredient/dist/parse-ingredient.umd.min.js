"use strict";var ParseIngredient=(()=>{var M=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var W=(r,t)=>{for(var e in t)M(r,e,{get:t[e],enumerable:!0})},j=(r,t,e,u)=>{if(t&&typeof t=="object"||typeof t=="function")for(let l of F(t))!P.call(r,l)&&l!==e&&M(r,l,{get:()=>t[l],enumerable:!(u=A(t,l))||u.enumerable});return r};var S=r=>j(M({},"__esModule",{value:!0}),r);var ae={};W(ae,{defaultOptions:()=>x,firstWordRegEx:()=>v,fors:()=>w,forsRegEx:()=>O,ofRegEx:()=>N,ofs:()=>k,parseIngredient:()=>se,rangeSeparatorRegEx:()=>b,rangeSeparatorWords:()=>L,unitsOfMeasure:()=>_});var T=Object.defineProperty,C=Object.getOwnPropertySymbols,B=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable,X=(r,t,e)=>t in r?T(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,E=(r,t)=>{for(var e in t||(t={}))B.call(t,e)&&X(r,e,t[e]);if(C)for(var e of C(t))G.call(t,e)&&X(r,e,t[e]);return r},D={"\xBC":"1/4","\xBD":"1/2","\xBE":"3/4","\u2150":"1/7","\u2151":"1/9","\u2152":"1/10","\u2153":"1/3","\u2154":"2/3","\u2155":"1/5","\u2156":"2/5","\u2157":"3/5","\u2158":"4/5","\u2159":"1/6","\u215A":"5/6","\u215B":"1/8","\u215C":"3/8","\u215D":"5/8","\u215E":"7/8","\u215F":"1/"},H=/^(?=-?\s*\.\d|-?\s*\d)(-)?\s*((?:\d(?:[\d,_]*\d)?)*)(([eE][+-]?\d(?:[\d,_]*\d)?)?|\.\d(?:[\d,_]*\d)?([eE][+-]?\d(?:[\d,_]*\d)?)?|(\s+\d(?:[\d,_]*\d)?\s*)?\s*\/\s*\d(?:[\d,_]*\d)?)?$/,Q=/^(?=-?\s*\.\d|-?\s*\d)(-)?\s*((?:\d(?:[\d,_]*\d)?)*)(([eE][+-]?\d(?:[\d,_]*\d)?)?|\.\d(?:[\d,_]*\d)?([eE][+-]?\d(?:[\d,_]*\d)?)?|(\s+\d(?:[\d,_]*\d)?\s*)?\s*\/\s*\d(?:[\d,_]*\d)?)?(?:\s*[^\.\d\/].*)?/,J=new RegExp(`(${Object.keys(D).join("|")})`),I={MMM:3e3,MM:2e3,M:1e3,CM:900,DCCC:800,DCC:700,DC:600,D:500,CD:400,CCC:300,CC:200,C:100,XC:90,LXXX:80,LXX:70,LX:60,L:50,XL:40,XXX:30,XX:20,XII:12,XI:11,X:10,IX:9,VIII:8,VII:7,VI:6,V:5,IV:4,III:3,II:2,I:1},V={"\u2160":"I","\u2161":"II","\u2162":"III","\u2163":"IV","\u2164":"V","\u2165":"VI","\u2166":"VII","\u2167":"VIII","\u2168":"IX","\u2169":"X","\u216A":"XI","\u216B":"XII","\u216C":"L","\u216D":"C","\u216E":"D","\u216F":"M","\u2170":"I","\u2171":"II","\u2172":"III","\u2173":"IV","\u2174":"V","\u2175":"VI","\u2176":"VII","\u2177":"VIII","\u2178":"IX","\u2179":"X","\u217A":"XI","\u217B":"XII","\u217C":"L","\u217D":"C","\u217E":"D","\u217F":"M"},K=new RegExp(`(${Object.keys(V).join("|")})`,"gi"),Y=/^(?=[MDCLXVI])(M{0,3})(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$/i,y={round:3,allowTrailingInvalid:!1,romanNumerals:!1},Z=r=>{var t,e,u,l;let d=`${r}`.replace(K,(a,n)=>V[n]).toUpperCase(),c=Y.exec(d);if(!c)return NaN;let[,s,g,m,o]=c;return((t=I[s])!=null?t:0)+((e=I[g])!=null?e:0)+((u=I[m])!=null?u:0)+((l=I[o])!=null?l:0)},ee=/^\s*\//,f=(r,t=y)=>{if(typeof r=="number"||typeof r=="bigint")return r;let e=NaN,u=`${r}`.replace(J,(n,i)=>` ${D[i]}`).replace("\u2044","/").trim();if(u.length===0)return NaN;let l=E(E({},y),t),d=(l.allowTrailingInvalid?Q:H).exec(u);if(!d)return l.romanNumerals?Z(u):NaN;let[,c,s,g]=d,m=s.replace(/[,_]/g,""),o=g?.replace(/[,_]/g,"");if(!m&&o&&o.startsWith(".")?e=0:e=parseInt(m),!o)return c?e*-1:e;let a=l.round===!1?NaN:parseFloat(`1e${Math.floor(Math.max(0,l.round))}`);if(o.startsWith(".")||o.startsWith("e")||o.startsWith("E")){let n=parseFloat(`${e}${o}`);e=isNaN(a)?n:Math.round(n*a)/a}else if(ee.test(o)){let n=parseInt(m),i=parseInt(o.replace("/",""));e=isNaN(a)?n/i:Math.round(n*a/i)/a}else{let n=o.split("/"),[i,p]=n.map(h=>parseInt(h));e+=isNaN(a)?i/p:Math.round(i*a/p)/a}return c?e*-1:e};var x={additionalUOMs:{},allowLeadingOf:!1,normalizeUOM:!1},w=["For"],O=new RegExp(`^(?:${w.join("|")})\\s`,"i"),L=["or","to"],b=new RegExp(`^(-|\u2013|\u2014|(?:${L.join("|")})\\s)`,"i"),v=/^(fl(?:uid)?(?:\s+|-)(?:oz|ounces?)|\w+[-.]?)(.+)?/,k=["of"],N=new RegExp(`^(?:${k.join("|")})\\s+`,"i"),_={bag:{short:"bag",plural:"bags",alternates:[]},box:{short:"box",plural:"boxes",alternates:[]},bunch:{short:"bunch",plural:"bunches",alternates:[]},can:{short:"can",plural:"cans",alternates:[]},carton:{short:"carton",plural:"cartons",alternates:[]},centimeter:{short:"cm",plural:"centimeters",alternates:["cm."]},clove:{short:"clove",plural:"cloves",alternates:[]},container:{short:"container",plural:"containers",alternates:[]},cup:{short:"c",plural:"cups",alternates:["c.","C"]},dash:{short:"dash",plural:"dashes",alternates:[]},drop:{short:"drop",plural:"drops",alternates:[]},ear:{short:"ear",plural:"ears",alternates:[]},"fluid ounce":{short:"fl oz",plural:"fluid ounces",alternates:["fluidounce","floz","fl-oz","fluid-ounce","fluid-ounces","fluidounces","fl ounce","fl ounces","fl-ounce","fl-ounces","fluid oz","fluid-oz"]},foot:{short:"ft",plural:"feet",alternates:["ft."]},gallon:{short:"gal",plural:"gallons",alternates:["gal."]},gram:{short:"g",plural:"grams",alternates:["g."]},head:{short:"head",plural:"heads",alternates:[]},inch:{short:"in",plural:"inches",alternates:["in."]},kilogram:{short:"kg",plural:"kilograms",alternates:["kg."]},large:{short:"lg",plural:"large",alternates:["lg","lg."]},liter:{short:"l",plural:"liters",alternates:[]},medium:{short:"md",plural:"medium",alternates:["med","med.","md."]},meter:{short:"m",plural:"meters",alternates:["m."]},milligram:{short:"mg",plural:"milligrams",alternates:["mg."]},milliliter:{short:"ml",plural:"milliliters",alternates:["mL","ml.","mL."]},millimeter:{short:"mm",plural:"millimeters",alternates:["mm."]},ounce:{short:"oz",plural:"ounces",alternates:["oz."]},pack:{short:"pack",plural:"packs",alternates:[]},package:{short:"pkg",plural:"packages",alternates:["pkg.","pkgs"]},piece:{short:"piece",plural:"pieces",alternates:["pcs","pcs."]},pinch:{short:"pinch",plural:"pinches",alternates:[]},pint:{short:"pt",plural:"pints",alternates:["pt."]},pound:{short:"lb",plural:"pounds",alternates:["lb.","lbs","lbs."]},quart:{short:"qt",plural:"quarts",alternates:["qt.","qts","qts."]},small:{short:"sm",plural:"small",alternates:["sm."]},sprig:{short:"sprig",plural:"sprigs",alternates:[]},stick:{short:"stick",plural:"sticks",alternates:[]},tablespoon:{short:"tbsp",plural:"tablespoons",alternates:["tbsp.","T","Tbsp."]},teaspoon:{short:"tsp",plural:"teaspoons",alternates:["tsp.","t"]},yard:{short:"yd",plural:"yards",alternates:["yd.","yds."]}};var q=r=>{let t=-1,e=r.length,u=0,l=[];for(;++t<e;){let d=r[t].trim();d&&(l[u++]=d)}return l};var te=/\r?\n/,re=([r,t])=>({id:r,...t}),se=(r,t=x)=>{let e={...x,...t},u={..._,...e.additionalUOMs},l=Object.entries(u).map(re),d=l.length;return q(r.split(te)).map(c=>{let s={quantity:null,quantity2:null,unitOfMeasureID:null,unitOfMeasure:null,description:"",isGroupHeader:!1},g=f(c.substring(0,1));if(isNaN(g))s.description=c,(s.description.endsWith(":")||O.test(s.description))&&(s.isGroupHeader=!0);else{let a=6,n=NaN;for(;a>0&&isNaN(n);)n=f(c.substring(0,a).trim()),n>-1&&(s.quantity=n,s.description=c.substring(a).trim()),a--}let m=b.exec(s.description);if(m){let a=m[1].length,n=f(s.description.substring(a).trim()[0]);if(!isNaN(n)){let i=7,p=NaN;for(;--i>0&&isNaN(p);)p=f(s.description.substring(a,i)),isNaN(p)||(s.quantity2=p,s.description=s.description.substring(i).trim())}}let o=v.exec(s.description);if(o){let a=o[1].replace(/\s+/g," "),n=(o[2]??"").trim();if(n){let i="",p="",h=-1;for(;++h<d&&!i;){let{alternates:U,id:R,short:$,plural:z}=l[h];[...U,R,$,z].includes(a)&&(i=a,p=R)}i&&(s.unitOfMeasureID=p,s.unitOfMeasure=e.normalizeUOM?p:i,s.description=n)}}return!e.allowLeadingOf&&s.description.match(N)&&(s.description=s.description.replace(N,"")),s})};return S(ae);})();
//# sourceMappingURL=parse-ingredient.umd.min.js.map